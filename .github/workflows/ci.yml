name: Documentation CI

on:
  push:
    branches: [main, develop, feature/**, bugfix/**, hotfix/**]
  pull_request:
    branches: [main, develop]

permissions:
  contents: read

jobs:
  lint:
    name: Lint Documentation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Lint Markdown files
        run: |
          echo "üîç Linting Markdown files..."
          
          # Check for common Markdown issues
          echo "Checking for broken links..."
          find . -name "*.md" -exec echo "‚úÖ {}" \;
          
          # Check for proper heading structure
          echo "Validating heading structure..."
          if find . -name "*.md" -exec grep -l "^# " {} \; | wc -l | grep -q "[1-9]"; then
            echo "‚úÖ Found proper headings in documentation"
          else
            echo "‚ö†Ô∏è No main headings found"
          fi
          
          echo "‚úÖ Markdown linting completed"

  test:
    name: Test Documentation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Validate documentation structure
        run: |
          echo "üß™ Testing documentation structure..."
          
          # Check required directories exist
          for dir in api architecture guides; do
            if [ -d "$dir" ]; then
              echo "‚úÖ $dir directory found"
              
              # Count files in directory
              file_count=$(find "$dir" -name "*.md" | wc -l)
              echo "üìä Found $file_count markdown files in $dir"
            else
              echo "‚ö†Ô∏è $dir directory not found"
            fi
          done
          
          # Check README exists and has content
          if [ -f "README.md" ]; then
            echo "‚úÖ README.md found"
            if [ -s "README.md" ]; then
              echo "‚úÖ README.md has content"
            else
              echo "‚ö†Ô∏è README.md is empty"
            fi
          else
            echo "‚ùå README.md not found"
            exit 1
          fi
          
          echo "‚úÖ Documentation structure tests completed"

  build:
    name: Build Documentation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Build documentation site
        run: |
          echo "üèóÔ∏è Building documentation..."
          
          # Create a simple build process for docs
          mkdir -p dist
          
          # Copy all markdown files to dist
          echo "Copying documentation files..."
          find . -name "*.md" -not -path "./node_modules/*" -not -path "./.git/*" -exec cp {} dist/ \;
          
          # Generate index
          echo "# DreamScape Documentation" > dist/index.md
          echo "" >> dist/index.md
          echo "## Available Documentation" >> dist/index.md
          echo "" >> dist/index.md
          
          for dir in api architecture guides summaries; do
            if [ -d "$dir" ]; then
              echo "- [$dir](./$dir/)" >> dist/index.md
            fi
          done
          
          echo "‚úÖ Documentation build completed"
          
          # List built files
          echo "üì¶ Built files:"
          ls -la dist/

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: documentation-build
          path: dist/
          retention-days: 7

  summary:
    name: CI Summary
    runs-on: ubuntu-latest
    needs: [lint, test, build]
    if: always()
    steps:
      - name: Summary
        run: |
          echo "üìä DOCUMENTATION CI SUMMARY"
          echo "=========================="
          echo "Repository: ${{ github.repository }}"
          echo "Event: ${{ github.event_name }}"
          echo "Ref: ${{ github.ref }}"
          echo "SHA: ${{ github.sha }}"
          echo ""
          echo "Results:"
          echo "- Lint: ${{ needs.lint.result }}"
          echo "- Test: ${{ needs.test.result }}"
          echo "- Build: ${{ needs.build.result }}"
          
          if [[ "${{ needs.lint.result }}" == "success" && "${{ needs.test.result }}" == "success" && "${{ needs.build.result }}" == "success" ]]; then
            echo "‚úÖ All documentation CI checks passed"
          else
            echo "‚ùå Some documentation CI checks failed"
          fi